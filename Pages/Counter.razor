@page "/counter"
@using Entidades;
@using DAL;
@using BLL;

<h1>Counter</h1>

<EditForm Model="@usuarios" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <div class=" form-group">
        <label for="UsuarioId">UsuarioId</label>
        <InputNumber @bind-Value="usuarios.UsuarioId" class="form-control" />
        <ValidationMessage For="@(() => usuarios.UsuarioId)" />
    </div>

    <div class="form-group">
        <label for="Fecha">Fecha</label>
        <InputDate @bind-Value="usuarios.FechaIngreso" class="form-control" />
        <ValidationMessage For="@(() => usuarios.FechaIngreso)" />
    </div>

    <div class=" form-group">
        <label for="Nombres">Nombres</label>
        <InputText @bind-Value="usuarios.Nombres" class="form-control" />
        <ValidationMessage For="@(() => usuarios.Nombres)" />
    </div>

    <div class=" form-group">
        <label for="Email">Email</label>
        <InputText @bind-Value="usuarios.Email" class="form-control" />
        <ValidationMessage For="@(() => usuarios.Email)" />
    </div>

    <div class=" form-group">
        <label for="NivelUsuario">NivelUsuario</label>
        <InputText @bind-Value="usuarios.NivelUsuario" class="form-control" />
        <ValidationMessage For="@(() => usuarios.NivelUsuario)" />
    </div>

    <div class=" form-group">
        <label for="Usuario">Usuario</label>
        <InputText @bind-Value="usuarios.Usuario" class="form-control" />
        <ValidationMessage For="@(() => usuarios.Usuario)" />
    </div>

    <div class=" form-group">
        <label for="Clave">Clave</label>
        <InputText @bind-Value="usuarios.Clave" class="form-control" />
        <ValidationMessage For="@(() => usuarios.Clave)" />
    </div>

</EditForm>

<div class=" form-group">
    <button type="submit" class=" btn btn-primary">Guardar</button>
</div>



@*<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>*@

@code {
    Usuarios usuarios = new Usuarios();
    int currentCount = 0;

    private void Limpiar()
    {
        usuarios = new Usuarios();
        usuarios.FechaIngreso = DateTime.Now;
    }

    private void Guardar()
    {
        RepositorioBase<Usuarios> db = new RepositorioBase<Usuarios>();
        try
        {
            if(usuarios.UsuarioId == 0)
            {
                if (db.Guardar(usuarios))
                {
                    Limpiar();
                }
            }
            else
            {
                if(db.Modificar(usuarios))
                {
                    Limpiar();
                }
            }

        }
        catch (Exception)
        {
            throw;
        }

    }
  
    

    void IncrementCount()
    {
        currentCount++;
    }
}
